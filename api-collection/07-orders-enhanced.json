		{
			"name": "ðŸ›’ Enhanced Order Management",
			"description": "Enhanced order management with public ordering, QR code access, and real-time tracking",
			"item": [
				{
					"name": "ðŸ“± Public Ordering",
					"description": "Public ordering endpoints for QR code access and customer ordering",
					"item": [
						{
							"name": "Access Menu via QR Code",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test('Response has venue and menu data', function () {",
											"    const jsonData = pm.response.json();",
											"    pm.expect(jsonData).to.have.property('venue');",
											"    pm.expect(jsonData).to.have.property('categories');",
											"    pm.expect(jsonData).to.have.property('items');",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/api/{{api_version}}/orders/public/qr/{{qr_code}}",
									"host": ["{{base_url}}"],
									"path": ["api", "{{api_version}}", "orders", "public", "qr", "{{qr_code}}"]
								},
								"description": "Access venue menu through QR code scan. No authentication required."
							},
							"response": []
						},
						{
							"name": "Check Venue Operating Status",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test('Response has status information', function () {",
											"    const jsonData = pm.response.json();",
											"    pm.expect(jsonData).to.have.property('is_open');",
											"    pm.expect(jsonData).to.have.property('current_status');",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/api/{{api_version}}/orders/public/venue/{{venue_id}}/status",
									"host": ["{{base_url}}"],
									"path": ["api", "{{api_version}}", "orders", "public", "venue", "{{venue_id}}", "status"]
								},
								"description": "Check if venue is currently open for orders. No authentication required."
							},
							"response": []
						},
						{
							"name": "Validate Order",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test('Response has validation result', function () {",
											"    const jsonData = pm.response.json();",
											"    pm.expect(jsonData).to.have.property('is_valid');",
											"    pm.expect(jsonData).to.have.property('venue_open');",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"venue_id\": \"{{venue_id}}\",\n    \"table_id\": \"{{table_id}}\",\n    \"items\": [\n        {\n            \"menu_item_id\": \"item123\",\n            \"quantity\": 2,\n            \"special_instructions\": \"No onions\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{base_url}}/api/{{api_version}}/orders/public/validate-order",
									"host": ["{{base_url}}"],
									"path": ["api", "{{api_version}}", "orders", "public", "validate-order"]
								},
								"description": "Validate order before creation - check venue hours and item availability."
							},
							"response": []
						},
						{
							"name": "Create Public Order",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 201', function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"pm.test('Response has order data', function () {",
											"    const jsonData = pm.response.json();",
											"    pm.expect(jsonData).to.have.property('order_id');",
											"    pm.expect(jsonData).to.have.property('order_number');",
											"    pm.expect(jsonData).to.have.property('total_amount');",
											"    ",
											"    // Store order ID for tracking",
											"    pm.environment.set('public_order_id', jsonData.order_id);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"venue_id\": \"{{venue_id}}\",\n    \"table_id\": \"{{table_id}}\",\n    \"customer\": {\n        \"name\": \"John Doe\",\n        \"phone\": \"+1234567890\"\n    },\n    \"items\": [\n        {\n            \"menu_item_id\": \"item123\",\n            \"quantity\": 2,\n            \"customizations\": {},\n            \"special_instructions\": \"No onions\"\n        },\n        {\n            \"menu_item_id\": \"item456\",\n            \"quantity\": 1,\n            \"special_instructions\": \"Extra spicy\"\n        }\n    ],\n    \"order_type\": \"qr_scan\",\n    \"special_instructions\": \"Please serve quickly\"\n}"
								},
								"url": {
									"raw": "{{base_url}}/api/{{api_version}}/orders/public/create-order",
									"host": ["{{base_url}}"],
									"path": ["api", "{{api_version}}", "orders", "public", "create-order"]
								},
								"description": "Create order from public interface (QR scan). No authentication required."
							},
							"response": []
						},
						{
							"name": "Track Order Status",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test('Response has order status', function () {",
											"    const jsonData = pm.response.json();",
											"    pm.expect(jsonData).to.have.property('data');",
											"    pm.expect(jsonData.data).to.have.property('order_id');",
											"    pm.expect(jsonData.data).to.have.property('status');",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/api/{{api_version}}/orders/public/{{public_order_id}}/status",
									"host": ["{{base_url}}"],
									"path": ["api", "{{api_version}}", "orders", "public", "{{public_order_id}}", "status"]
								},
								"description": "Track order status using order ID. No authentication required."
							},
							"response": []
						},
						{
							"name": "Get Order Receipt",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test('Response has receipt data', function () {",
											"    const jsonData = pm.response.json();",
											"    pm.expect(jsonData).to.have.property('data');",
											"    pm.expect(jsonData.data).to.have.property('order_number');",
											"    pm.expect(jsonData.data).to.have.property('items');",
											"    pm.expect(jsonData.data).to.have.property('total_amount');",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/api/{{api_version}}/orders/public/{{public_order_id}}/receipt",
									"host": ["{{base_url}}"],
									"path": ["api", "{{api_version}}", "orders", "public", "{{public_order_id}}", "receipt"]
								},
								"description": "Get detailed order receipt. No authentication required."
							},
							"response": []
						},
						{
							"name": "Submit Order Feedback",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test('Response indicates success', function () {",
											"    const jsonData = pm.response.json();",
											"    pm.expect(jsonData).to.have.property('success', true);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{base_url}}/api/{{api_version}}/orders/public/{{public_order_id}}/feedback?rating=5&feedback=Great food and service!",
									"host": ["{{base_url}}"],
									"path": ["api", "{{api_version}}", "orders", "public", "{{public_order_id}}", "feedback"],
									"query": [
										{
											"key": "rating",
											"value": "5"
										},
										{
											"key": "feedback",
											"value": "Great food and service!"
										}
									]
								},
								"description": "Submit feedback and rating for completed order. No authentication required."
							},
							"response": []
						}
					]
				},
				{
					"name": "ðŸ“‹ Order Status Management",
					"description": "Order status management and lifecycle endpoints",
					"item": [
						{
							"name": "Update Order Status",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test('Response indicates success', function () {",
											"    const jsonData = pm.response.json();",
											"    pm.expect(jsonData).to.have.property('success', true);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "\"confirmed\""
								},
								"url": {
									"raw": "{{base_url}}/api/{{api_version}}/orders/{{order_id}}/status",
									"host": ["{{base_url}}"],
									"path": ["api", "{{api_version}}", "orders", "{{order_id}}", "status"]
								},
								"description": "Update order status with validation. Valid statuses: pending, confirmed, preparing, ready, served, delivered, cancelled."
							},
							"response": []
						},
						{
							"name": "Confirm Order",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test('Response indicates success', function () {",
											"    const jsonData = pm.response.json();",
											"    pm.expect(jsonData).to.have.property('success', true);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{base_url}}/api/{{api_version}}/orders/{{order_id}}/confirm?estimated_minutes=15",
									"host": ["{{base_url}}"],
									"path": ["api", "{{api_version}}", "orders", "{{order_id}}", "confirm"],
									"query": [
										{
											"key": "estimated_minutes",
											"value": "15"
										}
									]
								},
								"description": "Confirm pending order with optional estimated preparation time."
							},
							"response": []
						},
						{
							"name": "Cancel Order",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test('Response indicates success', function () {",
											"    const jsonData = pm.response.json();",
											"    pm.expect(jsonData).to.have.property('success', true);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{base_url}}/api/{{api_version}}/orders/{{order_id}}/cancel?reason=Customer requested cancellation",
									"host": ["{{base_url}}"],
									"path": ["api", "{{api_version}}", "orders", "{{order_id}}", "cancel"],
									"query": [
										{
											"key": "reason",
											"value": "Customer requested cancellation"
										}
									]
								},
								"description": "Cancel order with optional reason."
							},
							"response": []
						}
					]
				},
				{
					"name": "ðŸ“Š Order Analytics & Tracking",
					"description": "Order analytics and real-time tracking endpoints",
					"item": [
						{
							"name": "Get Venue Order Analytics",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test('Response has analytics data', function () {",
											"    const jsonData = pm.response.json();",
											"    pm.expect(jsonData).to.have.property('total_orders');",
											"    pm.expect(jsonData).to.have.property('total_revenue');",
											"    pm.expect(jsonData).to.have.property('average_order_value');",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/api/{{api_version}}/orders/venues/{{venue_id}}/analytics?start_date=2024-01-01&end_date=2024-12-31",
									"host": ["{{base_url}}"],
									"path": ["api", "{{api_version}}", "orders", "venues", "{{venue_id}}", "analytics"],
									"query": [
										{
											"key": "start_date",
											"value": "2024-01-01"
										},
										{
											"key": "end_date",
											"value": "2024-12-31"
										}
									]
								},
								"description": "Get order analytics for a venue with optional date range."
							},
							"response": []
						},
						{
							"name": "Get Live Order Status",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test('Response has live status data', function () {",
											"    const jsonData = pm.response.json();",
											"    pm.expect(jsonData).to.have.property('summary');",
											"    pm.expect(jsonData).to.have.property('orders_by_status');",
											"    pm.expect(jsonData.summary).to.have.property('total_active_orders');",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/api/{{api_version}}/orders/venues/{{venue_id}}/live",
									"host": ["{{base_url}}"],
									"path": ["api", "{{api_version}}", "orders", "venues", "{{venue_id}}", "live"]
								},
								"description": "Get real-time order status for venue dashboard."
							},
							"response": []
						},
						{
							"name": "Get Venue Orders",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test('Response has orders array', function () {",
											"    const jsonData = pm.response.json();",
											"    pm.expect(jsonData).to.be.an('array');",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/api/{{api_version}}/orders/venues/{{venue_id}}/orders?status=pending&limit=50",
									"host": ["{{base_url}}"],
									"path": ["api", "{{api_version}}", "orders", "venues", "{{venue_id}}", "orders"],
									"query": [
										{
											"key": "status",
											"value": "pending"
										},
										{
											"key": "limit",
											"value": "50"
										}
									]
								},
								"description": "Get all orders for a venue with optional status filter."
							},
							"response": []
						},
						{
							"name": "Get Customer Orders",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test('Response has orders array', function () {",
											"    const jsonData = pm.response.json();",
											"    pm.expect(jsonData).to.be.an('array');",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/api/{{api_version}}/orders/customers/{{customer_id}}/orders?limit=20",
									"host": ["{{base_url}}"],
									"path": ["api", "{{api_version}}", "orders", "customers", "{{customer_id}}", "orders"],
									"query": [
										{
											"key": "limit",
											"value": "20"
										}
									]
								},
								"description": "Get order history for a customer."
							},
							"response": []
						}
					]
				}
			]
		},