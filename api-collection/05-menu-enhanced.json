		{
			"name": "üçΩÔ∏è Enhanced Menu Management",
			"description": "Enhanced menu management with image uploads, bulk operations, and advanced search",
			"item": [
				{
					"name": "üìÇ Menu Categories",
					"description": "Menu category management endpoints",
					"item": [
						{
							"name": "Get Menu Categories",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test('Response has categories data', function () {",
											"    const jsonData = pm.response.json();",
											"    pm.expect(jsonData).to.have.property('data');",
											"    pm.expect(jsonData.data).to.be.an('array');",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/api/{{api_version}}/menu/categories?page=1&page_size=10&venue_id={{venue_id}}&is_active=true",
									"host": ["{{base_url}}"],
									"path": ["api", "{{api_version}}", "menu", "categories"],
									"query": [
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "page_size",
											"value": "10"
										},
										{
											"key": "venue_id",
											"value": "{{venue_id}}"
										},
										{
											"key": "is_active",
											"value": "true"
										}
									]
								},
								"description": "Get paginated list of menu categories with filtering."
							},
							"response": []
						},
						{
							"name": "Create Menu Category",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 201', function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"pm.test('Response has category data', function () {",
											"    const jsonData = pm.response.json();",
											"    pm.expect(jsonData).to.have.property('data');",
											"    pm.expect(jsonData.data).to.have.property('id');",
											"    ",
											"    // Store category ID for further operations",
											"    pm.environment.set('created_category_id', jsonData.data.id);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Beverages\",\n    \"description\": \"Hot and cold beverages including coffee, tea, and juices\",\n    \"venue_id\": \"{{venue_id}}\"\n}"
								},
								"url": {
									"raw": "{{base_url}}/api/{{api_version}}/menu/categories",
									"host": ["{{base_url}}"],
									"path": ["api", "{{api_version}}", "menu", "categories"]
								},
								"description": "Create a new menu category."
							},
							"response": []
						},
						{
							"name": "Get Category by ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test('Response has category data', function () {",
											"    const jsonData = pm.response.json();",
											"    pm.expect(jsonData).to.have.property('id');",
											"    pm.expect(jsonData).to.have.property('name');",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/api/{{api_version}}/menu/categories/{{created_category_id}}",
									"host": ["{{base_url}}"],
									"path": ["api", "{{api_version}}", "menu", "categories", "{{created_category_id}}"]
								},
								"description": "Get specific menu category by ID."
							},
							"response": []
						},
						{
							"name": "Update Menu Category",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test('Response indicates success', function () {",
											"    const jsonData = pm.response.json();",
											"    pm.expect(jsonData).to.have.property('success', true);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Hot & Cold Beverages\",\n    \"description\": \"Updated description for beverages category\",\n    \"is_active\": true\n}"
								},
								"url": {
									"raw": "{{base_url}}/api/{{api_version}}/menu/categories/{{created_category_id}}",
									"host": ["{{base_url}}"],
									"path": ["api", "{{api_version}}", "menu", "categories", "{{created_category_id}}"]
								},
								"description": "Update menu category information."
							},
							"response": []
						},
						{
							"name": "Upload Category Image",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test('Response has image URL', function () {",
											"    const jsonData = pm.response.json();",
											"    pm.expect(jsonData).to.have.property('data');",
											"    pm.expect(jsonData.data).to.have.property('image_url');",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"type": "file",
											"src": []
										}
									]
								},
								"url": {
									"raw": "{{base_url}}/api/{{api_version}}/menu/categories/{{created_category_id}}/image",
									"host": ["{{base_url}}"],
									"path": ["api", "{{api_version}}", "menu", "categories", "{{created_category_id}}", "image"]
								},
								"description": "Upload image for menu category."
							},
							"response": []
						},
						{
							"name": "Delete Menu Category",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test('Response indicates success', function () {",
											"    const jsonData = pm.response.json();",
											"    pm.expect(jsonData).to.have.property('success', true);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{base_url}}/api/{{api_version}}/menu/categories/{{created_category_id}}",
									"host": ["{{base_url}}"],
									"path": ["api", "{{api_version}}", "menu", "categories", "{{created_category_id}}"]
								},
								"description": "Delete menu category (soft delete by deactivating)."
							},
							"response": []
						}
					]
				},
				{
					"name": "üçï Menu Items",
					"description": "Menu item management endpoints",
					"item": [
						{
							"name": "Get Menu Items",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test('Response has items data', function () {",
											"    const jsonData = pm.response.json();",
											"    pm.expect(jsonData).to.have.property('data');",
											"    pm.expect(jsonData.data).to.be.an('array');",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/api/{{api_version}}/menu/items?page=1&page_size=10&venue_id={{venue_id}}&category_id={{created_category_id}}&is_available=true&is_vegetarian=true&spice_level=mild",
									"host": ["{{base_url}}"],
									"path": ["api", "{{api_version}}", "menu", "items"],
									"query": [
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "page_size",
											"value": "10"
										},
										{
											"key": "venue_id",
											"value": "{{venue_id}}"
										},
										{
											"key": "category_id",
											"value": "{{created_category_id}}"
										},
										{
											"key": "is_available",
											"value": "true"
										},
										{
											"key": "is_vegetarian",
											"value": "true",
											"disabled": true
										},
										{
											"key": "spice_level",
											"value": "mild",
											"disabled": true
										}
									]
								},
								"description": "Get paginated list of menu items with filtering."
							},
							"response": []
						},
						{
							"name": "Create Menu Item",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 201', function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"pm.test('Response has item data', function () {",
											"    const jsonData = pm.response.json();",
											"    pm.expect(jsonData).to.have.property('data');",
											"    pm.expect(jsonData.data).to.have.property('id');",
											"    ",
											"    // Store item ID for further operations",
											"    pm.environment.set('created_item_id', jsonData.data.id);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Cappuccino\",\n    \"description\": \"Rich espresso with steamed milk and foam, topped with cocoa powder\",\n    \"base_price\": 4.50,\n    \"category_id\": \"{{created_category_id}}\",\n    \"venue_id\": \"{{venue_id}}\",\n    \"is_vegetarian\": true,\n    \"spice_level\": \"mild\",\n    \"preparation_time_minutes\": 5\n}"
								},
								"url": {
									"raw": "{{base_url}}/api/{{api_version}}/menu/items",
									"host": ["{{base_url}}"],
									"path": ["api", "{{api_version}}", "menu", "items"]
								},
								"description": "Create a new menu item."
							},
							"response": []
						},
						{
							"name": "Get Menu Item by ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test('Response has item data', function () {",
											"    const jsonData = pm.response.json();",
											"    pm.expect(jsonData).to.have.property('id');",
											"    pm.expect(jsonData).to.have.property('name');",
											"    pm.expect(jsonData).to.have.property('base_price');",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/api/{{api_version}}/menu/items/{{created_item_id}}",
									"host": ["{{base_url}}"],
									"path": ["api", "{{api_version}}", "menu", "items", "{{created_item_id}}"]
								},
								"description": "Get specific menu item by ID."
							},
							"response": []
						},
						{
							"name": "Update Menu Item",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test('Response indicates success', function () {",
											"    const jsonData = pm.response.json();",
											"    pm.expect(jsonData).to.have.property('success', true);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Premium Cappuccino\",\n    \"description\": \"Rich espresso with steamed milk and foam, topped with premium cocoa powder\",\n    \"base_price\": 5.00,\n    \"preparation_time_minutes\": 6,\n    \"is_available\": true\n}"
								},
								"url": {
									"raw": "{{base_url}}/api/{{api_version}}/menu/items/{{created_item_id}}",
									"host": ["{{base_url}}"],
									"path": ["api", "{{api_version}}", "menu", "items", "{{created_item_id}}"]
								},
								"description": "Update menu item information."
							},
							"response": []
						},
						{
							"name": "Upload Item Images",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test('Response has image URLs', function () {",
											"    const jsonData = pm.response.json();",
											"    pm.expect(jsonData).to.have.property('data');",
											"    pm.expect(jsonData.data).to.have.property('image_urls');",
											"    pm.expect(jsonData.data.image_urls).to.be.an('array');",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "files",
											"type": "file",
											"src": []
										},
										{
											"key": "files",
											"type": "file",
											"src": []
										}
									]
								},
								"url": {
									"raw": "{{base_url}}/api/{{api_version}}/menu/items/{{created_item_id}}/images",
									"host": ["{{base_url}}"],
									"path": ["api", "{{api_version}}", "menu", "items", "{{created_item_id}}", "images"]
								},
								"description": "Upload multiple images for menu item."
							},
							"response": []
						},
						{
							"name": "Delete Menu Item",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test('Response indicates success', function () {",
											"    const jsonData = pm.response.json();",
											"    pm.expect(jsonData).to.have.property('success', true);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{base_url}}/api/{{api_version}}/menu/items/{{created_item_id}}",
									"host": ["{{base_url}}"],
									"path": ["api", "{{api_version}}", "menu", "items", "{{created_item_id}}"]
								},
								"description": "Delete menu item (soft delete by marking unavailable)."
							},
							"response": []
						}
					]
				},
				{
					"name": "üîç Search & Filter",
					"description": "Advanced search and filtering endpoints",
					"item": [
						{
							"name": "Get Venue Categories",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test('Response has categories array', function () {",
											"    const jsonData = pm.response.json();",
											"    pm.expect(jsonData).to.be.an('array');",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/api/{{api_version}}/menu/venues/{{venue_id}}/categories",
									"host": ["{{base_url}}"],
									"path": ["api", "{{api_version}}", "menu", "venues", "{{venue_id}}", "categories"]
								},
								"description": "Get all categories for a specific venue."
							},
							"response": []
						},
						{
							"name": "Get Venue Menu Items",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test('Response has items array', function () {",
											"    const jsonData = pm.response.json();",
											"    pm.expect(jsonData).to.be.an('array');",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/api/{{api_version}}/menu/venues/{{venue_id}}/items?category_id={{created_category_id}}",
									"host": ["{{base_url}}"],
									"path": ["api", "{{api_version}}", "menu", "venues", "{{venue_id}}", "items"],
									"query": [
										{
											"key": "category_id",
											"value": "{{created_category_id}}",
											"disabled": true
										}
									]
								},
								"description": "Get all menu items for a venue with optional category filter."
							},
							"response": []
						},
						{
							"name": "Search Menu Items",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test('Response has search results', function () {",
											"    const jsonData = pm.response.json();",
											"    pm.expect(jsonData).to.be.an('array');",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/api/{{api_version}}/menu/venues/{{venue_id}}/search?q=coffee",
									"host": ["{{base_url}}"],
									"path": ["api", "{{api_version}}", "menu", "venues", "{{venue_id}}", "search"],
									"query": [
										{
											"key": "q",
											"value": "coffee"
										}
									]
								},
								"description": "Search menu items within a venue by name or description."
							},
							"response": []
						}
					]
				},
				{
					"name": "‚ö° Bulk Operations",
					"description": "Bulk operations for menu management",
					"item": [
						{
							"name": "Bulk Update Item Availability",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test('Response indicates success', function () {",
											"    const jsonData = pm.response.json();",
											"    pm.expect(jsonData).to.have.property('success', true);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"item_ids\": [\"{{created_item_id}}\", \"item2_id\", \"item3_id\"],\n    \"is_available\": false\n}"
								},
								"url": {
									"raw": "{{base_url}}/api/{{api_version}}/menu/items/bulk-update-availability",
									"host": ["{{base_url}}"],
									"path": ["api", "{{api_version}}", "menu", "items", "bulk-update-availability"]
								},
								"description": "Update availability for multiple menu items at once."
							},
							"response": []
						},
						{
							"name": "Toggle Category Items Availability",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test('Response indicates success', function () {",
											"    const jsonData = pm.response.json();",
											"    pm.expect(jsonData).to.have.property('success', true);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"is_available\": true\n}"
								},
								"url": {
									"raw": "{{base_url}}/api/{{api_version}}/menu/categories/{{created_category_id}}/items/toggle-availability",
									"host": ["{{base_url}}"],
									"path": ["api", "{{api_version}}", "menu", "categories", "{{created_category_id}}", "items", "toggle-availability"]
								},
								"description": "Toggle availability for all items in a category."
							},
							"response": []
						}
					]
				}
			]
		},